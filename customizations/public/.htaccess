FileETag MTime Size

    #### support for serving static gzip'ed content in lieu of o-t-f compression
#<Files ~ "\.css\.gz$">
#  AddEncoding gzip .gz
#  ForceType text/css
#</Files>
#<Files ~ "\.js\.gz$">
#  AddEncoding gzip .gz
#  ForceType text/javascript
#</Files>

ReWriteEngine on

  # serve pre-gzip'ed files where appropriate:
# unfortunately, A2 also does something to empty the Accept-Encoding header
# before processing reaches us, so instead of just being able to say:
#ReWriteCond %{HTTP:Accept-Encoding} gzip
# we have to assume the browser can accept gzip enconding, so narrow
# the set of requests that we'll do this for, just in case
#ReWriteCond %{REQUEST_FILENAME} _packaged
#ReWriteCond %{REQUEST_FILENAME}.gz -f
# then exclude specific cases where we don't want to gzip encode
#ReWriteCond %{HTTP_USER_AGENT} !Safari
#ReWriteCond %{HTTP_USER_AGENT} !Mozilla/4 [OR]
#ReWriteCond %{HTTP_USER_AGENT} MSIE
#ReWriteCond %{REQUEST_FILENAME} !^.+\.gz$
#ReWriteCond %{HTTP_HOST} ^wontology.org$
#ReWriteRule ^(.*)$ $1.gz [L]

  # for Rails apps, use Rails query parameters for cache control
ReWriteCond %{QUERY_STRING} ^[0-9]+$
ReWriteCond %{HTTP_HOST} ^wontology.org$
ReWriteRule ^(.*)$ - [env=is_versioned:true]

# For all assets that aren't stamped by rails, no caching
Header set "Cache-Control" "max-age=0"
# For all assets that ARE stamped by rails, cache them for 30 days
Header set "Cache-Control" "max-age=2592000" env=is_versioned

    ################ wontology.org
  # "www." is *not* the start of our canonical server name
ReWriteCond %{HTTP_HOST} ^www\.wontology\.org
ReWriteRule ^(.*)$ http://wontology.org/$1 [R=301,L]

  # if we're down for maintenance, say so
ReWriteCond /home/glenivey/public_html/maintenance.html -f
ReWriteCond %{REQUEST_FILENAME} !maintenance
ReWriteRule ^(.*)$ /maintenance.html [L,R=307]

  # finally, pass all WontoMedia requests to Mongrel/Rails
# alas, our rewrite for gzip'ed versions of static files kicks off
# a from-the-top re-evaluation of all the rewrites, so we have to
# explicitly prevent these (rewritten) requests from being proxied to
# Rails (which is both slower and rewrites our Content-Type).
#ReWriteCond $1 !\.gz$
# ditto the "we're down" page
ReWriteCond $1 !wontology-maintenance
ReWriteCond %{HTTP_HOST} ^wontology.org$
ReWriteRule ^(.*)$ http://127.0.0.1:12024/$1 [P,QSA,L]

###########################################################################

  # A2 Hosting doesn't install mod_delfate on shared servers, so none
  # of this helps us
#AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css
#AddOutputFilterByType DEFLATE text/javascript application/javascript
#AddOutputFilterByType DEFLATE text/ecmascript application/ecmascript
#BrowserMatch ^Mozilla/4 gzip-only-text/html
#BrowserMatch ^Mozilla/4\.0[678] no-gzip
#BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
#Header append Vary User-Agent env=!dont-vary

#RewriteCond %{HTTP_HOST} ^wontology.org$ [OR]
#RewriteCond %{HTTP_HOST} ^www.wontology.org$
#RewriteRule ^(.*)$ "http\:\/\/127\.0\.0\.1\:12024\/$1" [P,L]

